#!/bin/bash

#depends on:
#a file to fuzz
#zzuf
#'sbutils' from cydia
#'bc' from cydia
#'lighttpd' from cydia
#'adv-cmds' from cydia
#'safariresetter' from cydia
#'cURL' from cydia
#'wget' from cydia
#'coreutils' from cydia

#installs to /usr/bin/

action=$1
file=$2
slowdown=0
time=11
ratio="0.0001:0.001"
params=( $( for arg in $@; do echo "$arg"; done ) )
usage="Usage: fuzzycactus [start/stop/watch/help] /path/to/file.mov [-s] [-t 11] [-r 0.0001:0.001]"
wrkdir="/private/var/fuzzycactus"

if [[ -z "$action" ]]; then
	echo "You must provide an action."
	echo "$usage"
	exit
fi

start()
{
	#get the time
	i=0
	for arg in "${params[@]}"; do
		if [[ "$arg" == "-t" ]]; then
			time="${params[$i+1]}"
		fi
		if [[ "$arg" == "-r" ]]; then
			ratio="${params[$i+1]}"
		fi
		if [[ "$arg" == "-s" ]]; then
			slowdown=1
		fi
		((i++))
	done

	#check the time
	if [ $( echo $time | egrep -c "(^[0-9]+$)|(^[0-9]+[\.][0-9]+$)" ) -eq 0 ]; then
		echo "The time provided isn't valid."
		echo "Please provide a new time."
		echo "$usage"
		exit
	fi

	#check the ratio
	if [ $( echo $ratio | egrep -c "(^[0]*[\.][0-9]+[:][0]*[\.][0-9]+$)|(^[0]*[\.][0-9]+$)" ) -eq 0 ]; then
		echo "The ratio provided isn't valid."
		echo "Please provide a new ratio."
		echo "$usage"
		exit
	fi
	range=( $( echo $ratio | sed "s|:| |g" ) )
	if [[ -n "${range[1]}" ]]; then
		if [ $(echo "${range[0]} > ${range[1]}" | bc) -eq 1 ]; then
			echo "The ratio provided isn't valid."
			echo "The first ratio argument must be smaller than the second ratio argument."
			echo "Please provide a new ratio."
			echo "$usage"
			exit
		elif [ $(echo "${range[0]} == ${range[1]}" | bc) -eq 1 ]; then
			ratio="${range[0]}"
		fi
	fi

	#relative paths
	path="$( pwd )"
	if [[ "${file:0:2}" == "./" ]]; then
		file="$path/${file:2}"
	elif [[ "${file:0:3}" == "../" ]]; then
		file="$path/$file"
	fi

	if [[ ! -e "$file" ]]; then
		echo "The provided file does not exist."
		echo "Please check your path and try again."
		exit
	fi

	cd $wrkdir/

	if [[ ! -e ./checks.sh ]]; then
		echo "No 'checks.sh' file found, please re-download from http://github.com/compilingEntropy/fuzzycactus."
		exit
	fi

	./checks.sh
	if [ $? -ne 2 ]; then
		exit
	fi

	if [[ ! -e ./crashclean.sh ]]; then
		echo "No 'crashclean.sh' file found, please re-download from http://github.com/compilingEntropy/fuzzycactus."
		exit
	else
		./crashclean.sh 2>&1 | tee -a ./fuzz.log
	fi

	if [[ ! -e ./injector.sh ]]; then
		echo "No 'injector.sh' file found, please re-download from http://github.com/compilingEntropy/fuzzycactus."
		exit
	else
		./injector.sh $file -t $time -r $ratio $( if [ $slowdown -eq 1 ]; then echo "-s"; fi ) &> ./fuzz.log &
		tail -f ./fuzz.log
	fi
}

stop()
{
	cd $wrkdir/
	pnum=$( ps -ax | grep fuzzycactus | grep -v stop | grep -c -v grep )

	if [ $pnum -eq 0 ]; then
		echo "No fuzzycactus process running."
	else
		while [ $pnum -ge 1 ]; do
			kill "$( fuzz=( $( ps -ax | grep fuzzycactus | grep -v stop | grep -v grep ) ) && echo ${fuzz[0]} )" &> /dev/null
			echo "Stopped."
			((pnum--))
			sleep 0.5
		done
	fi

	if [[ ! -e ./crashclean.sh ]]; then
		echo "No 'crashclean.sh' file found, please re-download from http://github.com/compilingEntropy/fuzzycactus."
	else
		./crashclean.sh 2>&1 | tee -a ./fuzz.log
	fi
}

watch()
{
	pnum=$( ps -ax | grep fuzzycactus | grep -v stop | grep -c -v grep )

	if [ $pnum -eq 0 ]; then
		echo "No fuzzycactus process running."
	else
		tail -f $wrkdir/fuzz.log
	fi
}

helper()
{
	echo "$usage"
	echo ""
	echo "To start fuzzing ./file.mov, do:"
	echo "	fuzzycactus start ./file.mov"
	echo "To stop fuzzing, do:"
	echo "	fuzzycactus stop"
	echo "To view the current fuzzing session, do:"
	echo "	fuzzycactus watch"
	echo "For help, do:"
	echo "	fuzzycactus help"
	echo ""
	echo "Options:"
	echo "-t (time)     Allows you to change the time between each reset of MobileSafari"
	echo "-t 11         This is useful because it takes longer for a .mov file to load than for a .jpg for example."
	echo "              The default time used is 11, which works well for a 1 second .mov file."
	echo "-s (slowdown) Allows you to control whether or not the time between resets will grow slowly over time."
	echo "              This is useful because things like mediaserverd can get messy after a while and cause MobileSafari to take longer to load the file."
	echo "              I recommend turning this setting on for fuzzing anything that gets parsed by mediaserverd, such as a .mov file."
	echo "              This option is off by default."
	echo "-r (ratio)    Allows you to change the percent of the file that gets modified."
	echo "-r 0.001:0.1  If your ratio is 0.004, 0.4% of the file will be randomly modified."
	echo "              You'll want to turn up the ratio if your file is parsed correctly most of the time,"
	echo "              or turn it down if your file is rarely parsed correctly."
	echo "              This can be a static ratio, such as 0.004, or a range of values, such as 0.0001:0.001."
	echo "              If you provide a range, the ratio used will be any randomly determined value within that range."
	echo "              The default ratio is 0.0001:0.001. I have found this to be effective for many filetypes and files that are relatively small."
	echo ""
	echo "-----"
	echo "The working directory for fuzzycactus is $wrkdir/."
	echo "In this directory you will find the tools that make up fuzzycactus, as well as the results of your fuzzing session."
	echo "All crashes found are placed in $wrkdir/Crashes/ for you to inspect."
	echo ""
	echo "fuzzycactus attempts to pair crashes with the files that caused them."
	echo "The paired files and crashes are found in $wrkdir/Results/."
	echo "You will be notified if there are crashes that cannot be paired with files that caused them so that you can pair them manually."
	echo "If your device had a kernel panic while fuzzing, you can either start a new fuzzing session or run 'fuzzycactus stop' in order to pair the crashes."
	echo ""
	echo "This tool is designed to be run over ssh."
	echo "Fuzzing is daemonized, so you can safely ctrl+c and disconnect your ssh session without fear of interrupting your fuzzing."
	echo "If you choose to start this tool via mobileterminal, stop the script by doing a 'slide-to-power-off' or ssh in and do 'fuzzycactus stop'."
	echo ""
	echo "Important notices:"
	echo "Do not touch your device while it is fuzzing. This can cause false positives with the crash-detector or other issues."
	echo "Before you begin fuzzing, always ensure that your device is configured not to send diagnostics and usage to Apple."
	echo 'This setting can be changed in "Settings" > "General" > "About" > "Diagnostics & Usage". '"Enable the \"Don't send\" option."
}


if [[ "$action" == "start" ]]; then
	if [[ -n "$file" ]]; then
		start
		exit
	else
		echo "You must provide a file."
		echo "$usage"
		exit
	fi
elif [[ "$action" == "stop" ]]; then
	stop
	exit
elif [[ "$action" == "watch" ]]; then
	watch
	exit
elif [[ "$action" == "help" ]]; then
	helper
	exit
else
	echo 'Not a valid action! Allowed actions are: "start", "stop", and "help".'
	echo "$usage"
	exit
fi